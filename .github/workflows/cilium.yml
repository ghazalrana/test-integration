name: cilium-deployment

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ dev ]

  pull_request:
    branches: [ main ]
    types: [closed]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  cli-lint-build:

    if: ${{ github.event.pull_request.merged == true || github.event_name == 'push' }}


    runs-on: ubuntu-latest

    steps:

    - name: Installing Go 
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.5
      
        
    - name: Checkout Cilium-Cli
      uses: actions/checkout@v2
      with:
        repository: coredge-dev/cilium-cli
        token: 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
#         token: ${{ secrets.ACCESS_TOKEN }}
#        path: cilium-cli
        ref: v0.7-ced




    - name: Run Static Checks
      uses: golangci/golangci-lint-action@5c56cd6c9dc07901af25baab6f2b0d9f3b7c3018
      with:
        # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
        version: v1.40.1

        # Optional: golangci-lint command line arguments.
        args: --config=.golangci.yml --verbose

        # Optional: show only new issues if it's a pull request. The default value is `false`.
        only-new-issues: true

        # Optional: if set to true then the action will use pre-installed Go.
        skip-go-installation: true

        # Optional: if set to true then the action don't cache or restore ~/go/pkg.
        skip-pkg-cache: true

        # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
        skip-build-cache: true

    - name: Check Module Vendoring
      run: |
        go mod tidy
        go mod vendor
        go mod verify
        test -z "$(git status --porcelain)" || (echo "please run 'go mod tidy && go mod vendor', and submit your changes"; exit 1)
    - name: Set Up Go For Root
      run: |
        sudo ln -sf `which go` `sudo which go` || true
        sudo go version
    - name: Build and Install Cilium CLI Binary
      run: sudo make install


    # - name: Checking cilium version
    #   run: cilium version

    - name: Cross-build
      run: GOOS=linux GOARCH=amd64 go build ./...
#         # all GOOS/GOARCH combinations supported by `make local-release`
#         GOOS=linux GOARCH=386 go build ./...
#        GOOS=linux GOARCH=amd64 go build ./...
#         GOOS=linux GOARCH=arm go build ./...
#         GOOS=linux GOARCH=arm64 go build ./...
#         GOOS=darwin GOARCH=amd64 go build ./...
#         GOOS=darwin GOARCH=arm64 go build ./...

    - name: Test
      run: make test



  minikube-setup:

    needs: cli-lint-build
    runs-on: ubuntu-latest
    

    steps:
    - name: Checkout Code
      uses: actions/checkout@master
 

    - name: Installing Go 
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.5

    - name: Installing Development Tools
      run: |
        cd provision/minikube/github-actions
        ./github-development-tools.sh
        
    - name: Installing Docker    
      uses: docker-practice/actions-setup-docker@master

    - name: Installing Helm
      uses: WyriHaximus/github-action-helm3@v2.0

    
    - name: Installing Minikube
      uses: opsgang/ga-setup-minikube@v0.1.2
      with:
        minikube-version: 1.21.0
        k8s-version: 1.20.7


    - name: Starting Minikube 
      run: |
        minikube config set vm-driver docker
        minikube config set kubernetes-version v1.20.7
        minikube start --network-plugin=cni --memory=4096
        minikube ssh -- sudo mount bpffs -t bpf /sys/fs/bpf
        kubectl cluster-info
        kubectl wait --for=condition=Ready pods --all -n kube-system  --timeout=5m
        kubectl get pods -n kube-system

    
    - name: Checkout Cilium
      uses: actions/checkout@v2
      with:
        repository: zmced/cilium
        token: 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
#         token: ${{ secrets.ACCESS_TOKEN }}
        path: zmced-cilium
        ref: v1.10-ced
        

    - name: Deploying Cilium 1.10
      run: |
        cd provision/minikube/github-actions
        ./github-cilium-deploy.sh
        kubectl wait --for=condition=Ready pods --all -n kube-system  --timeout=15m
        kubectl get pods -n kube-system
     

    - name: Checkout Cilium-Cli
      uses: actions/checkout@v2
      with:
        repository: coredge-dev/cilium-cli
        token: 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
#         token: ${{ secrets.ACCESS_TOKEN }}
        path: cilium-cli
        ref: v0.7-ced
        

    - name: Deploying Cilium-CLI
      run: |
        mkdir -p ${HOME}/go/src/github.com/cilium/
        mv cilium-cli ${HOME}/go/src/github.com/cilium/
        cd provision/minikube/github-actions
        ./github-cilium-cli-deploy.sh
        cilium status
        
        
    - name: Running Connectivity Test
      run: cilium connectivity test
