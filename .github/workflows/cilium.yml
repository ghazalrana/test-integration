name: cilium-deployment

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ dev ]

  pull_request:
    branches: [ main ]
    types: [closed]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  minikube-setup:

    if: ${{ github.event.pull_request.merged == true || github.event_name == 'push' }}

#     if: github.event.pull_request.merged == true

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@master
 

    - name: Installing Go 
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.5

    - name: Installing Development Tools
      run: |
        cd provision/minikube/github-actions
        ./github-development-tools.sh
        
    - name: Installing Docker    
      uses: docker-practice/actions-setup-docker@master

    - name: Installing Helm
      uses: WyriHaximus/github-action-helm3@v2.0

    
    - name: Installing Minikube
      uses: opsgang/ga-setup-minikube@v0.1.2
      with:
        minikube-version: 1.21.0
        k8s-version: 1.20.7


    - name: Starting Minikube 
      run: |
        minikube config set vm-driver docker
        minikube config set kubernetes-version v1.20.7
        minikube start --network-plugin=cni --memory=4096
        minikube ssh -- sudo mount bpffs -t bpf /sys/fs/bpf
        kubectl cluster-info
        kubectl wait --for=condition=Ready pods --all -n kube-system  --timeout=5m
        kubectl get pods -n kube-system

    
    - name: Checkout Cilium
      uses: actions/checkout@v2
      with:
        repository: zmced/cilium
#        token: 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
#         token: ${{ secrets.ACCESS_TOKEN }}
        path: zmced-cilium
        ref: v1.10-ced
        

    - name: Deploying Cilium 1.10
      run: |
        cd provision/minikube/github-actions
        ./github-cilium-deploy.sh
        kubectl wait --for=condition=Ready pods --all -n kube-system  --timeout=15m
        kubectl get pods -n kube-system
     

    - name: Checkout Cilium-Cli
      uses: actions/checkout@v2
      with:
        repository: zmced/cilium-cli
  #      token: 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
#         token: ${{ secrets.ACCESS_TOKEN }}
        path: cilium-cli
        ref: v0.7-ced
        

    - name: Deploying Cilium-CLI
      run: |
        mkdir -p ${HOME}/go/src/github.com/cilium/
        mv cilium-cli ${HOME}/go/src/github.com/cilium/
        cd provision/minikube/github-actions
        ./github-cilium-cli-deploy.sh
        cilium status
        
        
    - name: Running Connectivity Test
      run: cilium connectivity test
    
  lint:
    if: ${{ github.event.pull_request.merged == true || github.event_name == 'push' }}
#     if: github.event.pull_request.merged == true ||  github.event.push == true

    runs-on: ubuntu-latest

    steps:

    - name: Installing Go 
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.5
      
#     - name: Cloning Cilium & Cilium-Cli
#       run: |
#         git clone https://github.com/cilium/cilium-cli.git
#          git clone https://github.com/cilium/cilium.git
      
      
    - name: Checkout Cilium
      uses: actions/checkout@v2
      with:
        repository: zmced/cilium
        token: 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
#         token: ${{ secrets.ACCESS_TOKEN }}
        path: zmced-cilium
        ref: v1.10-ced
        
    - name: Checkout Cilium-Cli
      uses: actions/checkout@v2
      with:
        repository: zmced/cilium-cli
        token: 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
#         token: ${{ secrets.ACCESS_TOKEN }}
        path: cilium-cli
        ref: v0.7-ced



    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2.5.2
      with:
        working-directory: zmced-cilium
        
#         only-new-issues: true

        # Optional: if set to true then the action don't cache or restore ~/go/pkg.
        skip-pkg-cache: true

        # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
        skip-build-cache: true
